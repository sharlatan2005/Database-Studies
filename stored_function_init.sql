DROP TABLE IF EXISTS spec;
CREATE TABLE spec
(
    id                integer PRIMARY KEY,
    table_name        varchar NOT NULL,
    column_name       varchar NOT NULL,
    current_max_value integer NOT NULL,
    UNIQUE (table_name, column_name)
);


INSERT INTO spec
VALUES (1, 'spec', 'id', 1);

CREATE OR REPLACE FUNCTION get_last_int(table_name_ varchar, column_name_ varchar, OUT max_val integer) AS
$$
BEGIN
    UPDATE spec
    SET current_max_value = current_max_value + 1
    WHERE table_name = table_name_
      AND column_name = column_name_
    RETURNING current_max_value INTO max_val;

    IF max_val IS NULL THEN
        EXECUTE FORMAT('SELECT max(%I) from %I', column_name_, table_name_) INTO max_val;
        INSERT INTO spec
        VALUES (get_last_int('spec', 'id'), table_name_, column_name_, COALESCE(max_val + 1, 1));
    END IF;

END;
$$ LANGUAGE plpgsql;

SELECT get_last_int('spec', 'id');

SELECT *
FROM spec;

SELECT get_last_int('spec', 'id');

SELECT *
FROM spec;

DROP TABLE IF EXISTS test;

CREATE TABLE test
(
    id integer GENERATED BY DEFAULT AS IDENTITY
);

INSERT INTO test
VALUES (10);

SELECT get_last_int('test', 'id');

SELECT *
FROM spec;

SELECT get_last_int('test', 'id');

SELECT *
FROM spec;

DROP TABLE IF EXISTS test2;
CREATE TABLE test2
(
    num_value1 integer,
    num_value2 integer
);

SELECT get_last_int('test2', 'num_value1');

SELECT *
FROM spec;

SELECT get_last_int('test2', 'num_value1');

SELECT *
FROM spec;

INSERT INTO test2
VALUES (2, 13);

SELECT get_last_int('test2', 'num_value2');

SELECT *
FROM spec;

SELECT get_last_int('test2', 'num_value1');
SELECT get_last_int('test2', 'num_value1');
SELECT get_last_int('test2', 'num_value1');
SELECT get_last_int('test2', 'num_value1');
SELECT get_last_int('test2', 'num_value1');

SELECT *
FROM spec;


DROP FUNCTION get_last_int(table_name_ varchar, column_name_ varchar);
DROP TABLE spec;
DROP TABLE test;
DROP TABLE test2;

